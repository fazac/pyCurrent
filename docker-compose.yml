services:
#  redis:
#    image: redis:latest
#    ports:
#      - "6379:6379"
#    volumes:
#      - redis-data:/data
#    networks:
#      myaonet:
#        ipv4_address: 192.168.0.11
  mysql:
    image: mysql:8
    restart: always
    environment:
      MYSQL_DATABASE: stockrealtime
      MYSQL_USER: fa
      MYSQL_PASSWORD: 123456
      MYSQL_ROOT_PASSWORD: 123456
#      MYSQL_MODE: STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION
      TZ: Asia/ShangHai
    ports:
      - "3306:3306"
    volumes:
      - db-data:/var/lib/mysql
      - ./stock.sql:/docker-entrypoint-initdb.d/stock.sql
      - ./custom.cnf:/etc/mysql/conf.d/custom.cnf
    privileged: true
    networks:
      myaonet:
        ipv4_address: 192.168.0.12
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 45s
      interval: 10s
      retries: 10

  frpcpy:
    image: pycpy:latest
#    volumes:
#      - py-data:/home
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      myaonet:
        ipv4_address: 192.168.0.13
#  java:
#    image: pycur:latest
#    environment:
#      TZ: Asia/Shanghai
#    ports:
#      - "19093:19093"
#    volumes:
#      - jar-data:/home
#    working_dir: /home/
#    depends_on:
#      - mysql
#      - redis
#    networks:
#      myaonet:
#        ipv4_address: 192.168.0.16
volumes:
  db-data:
#  redis-data:
#  jar-data:
#  py-data:

networks:
  myaonet:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.0.0/24
          gateway: 192.168.0.1



